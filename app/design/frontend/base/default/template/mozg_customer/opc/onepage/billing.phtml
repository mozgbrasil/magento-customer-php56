<?php
/**
* Copyright Â© 2016 Mozg. All rights reserved.
* See LICENSE.txt for license details.
*/
?>

<?php
$isRequired_taxvat = $this->getLayout()->createBlock('customer/widget_taxvat')->isRequired();
//dump($isRequired_taxvat);
?>

<!-- /app/design/frontend/base/default/template/opc/onepage/billing.phtml -->
<div id="co-billing-form">
    <h3><?php echo $this->__('Name & Address')?></h3>
    <ul class="form-list">
    <?php if ($this->customerHasAddresses()): ?>
        <li class="wide">
            <label for="billing-address-select" class="notice"><?php echo $this->__('Select a billing address from your address book or enter a new address.') ?></label>
            <div class="input-box">
                <?php echo $this->getAddressesHtmlSelect('billing') ?>
            </div>
        </li>
    <?php endif; ?>
        <li id="billing-new-address-form"<?php if ($this->customerHasAddresses()): ?> style="display:none;"<?php endif; ?>>
            <fieldset>
                <input type="hidden" name="billing[address_id]" value="<?php echo $this->getAddress()->getId() ?>" id="billing:address_id" />
                <ul>
                    <!-- MOZG -->
                    <?php /* ?>
                    <li class="fields">
                        <div class="field">
                            <label for="novo_campo" class="required"><em>*</em><?php echo $this->__('novo_campo') ?></label>
                            <div class="input-box">
                                <input type="text" name="mozg[novo_campo]" value="" title="" id="novo_campo" class="input-text required-entry" />
                            </div>
                        </div>
                    </li>
                    <?php */ ?>
                    <!-- MOZG -->
                    <li class="fields"><?php echo $this->getLayout()->createBlock('customer/widget_name')->setObject($this->getAddress()->getFirstname() ? $this->getAddress() : $this->getQuote()->getCustomer())->setForceUseCustomerRequiredAttributes(!$this->isCustomerLoggedIn())->setFieldIdFormat('billing:%s')->setFieldNameFormat('billing[%s]')->toHtml() ?></li>
                    <div class="clear"></div>
                    <li class="fields">
                        <div class="field">
                            <label for="billing:company"><?php echo $this->__('Company') ?></label>
                            <div class="input-box">
                                <input type="text" id="billing:company" name="billing[company]" value="<?php echo $this->escapeHtml($this->getAddress()->getCompany()) ?>" title="<?php echo $this->__('Company') ?>" class="input-text <?php echo $this->helper('opc')->getAttributeValidationClass('company') ?>" />
                            </div>
                        </div>
                        <?php if(!$this->isCustomerLoggedIn()): ?>
                        <div class="field">
                            <label for="billing:email" class="required"><em>*</em><?php echo $this->__('Email Address') ?></label>
                            <div class="input-box">
                                <input type="text" name="billing[email]" id="billing:email" value="<?php echo $this->escapeHtml($this->getAddress()->getEmail()) ?>" title="<?php echo $this->__('Email Address') ?>" class="input-text validate-email required-entry" />
                            </div>
                        </div>
                        <?php endif; ?>
                    </li>
                    <?php if(!$this->isCustomerLoggedIn()): ?>
                    <?php $_dob = $this->getLayout()->createBlock('customer/widget_dob') ?>
                    <?php $_gender = $this->getLayout()->createBlock('customer/widget_gender') ?>
                    <?php if ($_dob->isEnabled() || $_gender->isEnabled()): ?>
                    <li class="fields">
                        <?php if ($_dob->isEnabled()): ?>
                        <div class="field">
                            <?php echo $_dob->setDate($this->getQuote()->getCustomerDob())->setFieldIdFormat('billing:%s')->setFieldNameFormat('billing[%s]')->toHtml() ?>
                        </div>
                        <?php endif; ?>
                        <?php if ($_gender->isEnabled()): ?>
                        <div class="field">
                            <?php echo $_gender->setGender($this->getQuote()->getCustomerGender())->setFieldIdFormat('billing:%s')->setFieldNameFormat('billing[%s]')->toHtml() ?>
                        </div>
                        <?php endif ?>
                    </li>
                    <div class="clear"></div>
                    <?php endif ?>
                    <?php $_taxvat = $this->getLayout()->createBlock('customer/widget_taxvat') ?>
                    <?php if ($_taxvat->isEnabled()): ?>
                    <li class="fields">
                        <div class="field">
                            <?php echo $_taxvat->setTaxvat($this->getQuote()->getCustomerTaxvat())->setFieldIdFormat('billing:%s')->setFieldNameFormat('billing[%s]')->toHtml() ?>
                        </div>
                    </li>
                    <?php endif ?>
                    <?php endif; ?>
                    <?php /* ?><div class="clear"></div><?php */ ?>

                    <li class="fields">
                        <div class="field">
                            <label for="billing:postcode" class="required"><em>*</em><?php echo $this->__('Zip') ?></label>
                            <div class="input-box">
                                <input type="text" title="<?php echo $this->__('Zip') ?>" name="billing[postcode]" id="billing:postcode" value="<?php echo $this->escapeHtml($this->getAddress()->getPostcode()) ?>" class="input-text validate-zip-international <?php echo $this->helper('opc')->getAttributeValidationClass('postcode') ?>" />
                            </div>
                        </div>
                        <div class="field" id="billing:loading_spinner">
                            <label>&nbsp;</label>
                            <div class="input-box">
                                <?php $_filename = $this->getSkinUrl('images/mozg_base/loading.io.svg'); ?>
                                <img src="<?php echo $_filename; ?>" />
                            </div>
                        </div>
                        <script>
                            $('billing:loading_spinner').hide();
                        </script>
                    </li>

                <?php $_streetValidationClass = $this->helper('opc')->getAttributeValidationClass('street'); ?>

                <?php if(Mage::getStoreConfig('customer/mozg_customer/address_storage_format') == 1){ ?>

                    <!-- MOZG -->
                    <li class="fields">
                        <div class="field">
                            <label for="billing_rua" class="required"><em>*</em><?php echo Mage::helper('mozg_customer')->__('Street Address') ?></label>
                            <div class="input-box">
                                <input type="text" name="billing_rua" id="billing_rua" value="" title="<?php echo Mage::helper('mozg_customer')->__('Street Address') ?>" class="input-text required-entry" />
                            </div>
                        </div>
                        <div class="field">
                            <label for="billing_numero" class="required"><em>*</em><?php echo Mage::helper('mozg_customer')->__('Number') ?></label>
                            <div class="input-box">
                                <input type="text" name="billing_numero" id="billing_numero" value="" title="<?php echo Mage::helper('mozg_customer')->__('Number') ?>" class="input-text required-entry validate-zero-or-greater" />
                            </div>
                        </div>
                    </li>
                    <li class="fields">
                        <div class="field">
                            <label for="billing_complemento"><?php echo Mage::helper('mozg_customer')->__('Complemento') ?></label>
                            <div class="input-box">
                                <input type="text" name="billing_complemento" id="billing_complemento" value="" title="<?php echo Mage::helper('mozg_customer')->__('Complemento') ?>" class="input-text " />
                            </div>
                        </div>
                    </li>
                    <script type="text/javascript">
                        //<![CDATA[
                            setInterval(function() { 
                
                                /*console.info('street_1');
                                console.log($('street_1').value);
                                console.log($('billing_rua').value);
                                console.log($('billing_numero').value);*/
                
                                string = '';
                
                                if($('billing_numero').value){
                                        string += $('billing_rua').value + ', ' + $('billing_numero').value;
                                }
                
                                if($('billing_complemento').value){
                                        string += ' - ' + $('billing_complemento').value;
                                }
                
                                $('billing:street1').value = string;
                    
                            }, 1000);
                        //]]>
                    </script>
                    <!-- MOZG -->
                    <!-- MOZG -->
                    <li class="wide" style="display:none">
                        <label for="billing:street1" class="required"><em>*</em><?php echo $this->__('Address') ?></label>
                        <div class="input-box">
                            <input type="text" title="<?php echo $this->quoteEscape($this->__('Street Address')) ?>" name="billing[street][]" id="billing:street1" value="<?php echo $this->escapeHtml($this->getAddress()->getStreet(1)) ?>" class="input-text <?php echo $_streetValidationClass ?>" />
                        </div>
                    </li>
                    <li class="wide">
                        <label for="billing:street2" class="required"><em>*</em><?php echo $this->__('Neighborhood') ?></label>
                        <div class="input-box">
                            <input type="text" title="<?php echo $this->quoteEscape($this->__('Neighborhood')) ?>" name="billing[street][]" id="billing:street2" value="<?php echo $this->escapeHtml($this->getAddress()->getStreet(2)) ?>" class="input-text <?php echo $_streetValidationClass ?> required-entry" />
                        </div>
                    </li>
                    <!-- MOZG -->

                <?php }else{ ?>

                    <li class="wide">
                        <label for="billing:street1" class="required"><em>*</em><?php echo $this->__('Address') ?></label>
                        <div class="input-box">
                            <input type="text" title="<?php echo $this->__('Street Address') ?>" name="billing[street][]" id="billing:street1" value="<?php echo $this->escapeHtml($this->getAddress()->getStreet(1)) ?>" class="input-text <?php echo $_streetValidationClass ?>" />
                        </div>
                    </li>
                <?php $_streetValidationClass = trim(str_replace('required-entry', '', $_streetValidationClass)); ?>
                <?php for ($_i = 2, $_n = $this->helper('customer/address')->getStreetLines(); $_i <= $_n; $_i++): ?>
                    <li class="wide">
                        <label for="billing:street<?php echo $_i ?>" <?php if ($_i != 3): ?> class="required" <?php endif; ?>><?php if ($_i != 3): ?> <em>*</em> <?php endif; ?><?php echo $this->__('Street Address ' . $_i) ?></label>
                        <div class="input-box">
                            <input type="text" title="<?php echo $this->__('Street Address %s', $_i) ?>" name="billing[street][]" id="billing:street<?php echo $_i ?>" value="<?php echo $this->escapeHtml($this->getAddress()->getStreet($_i)) ?>" class="input-text <?php echo $_streetValidationClass ?> <?php if ($_i != 3): ?>required-entry<?php endif; ?> <?php if ($_i == 2): ?>validate-zero-or-greater<?php endif; ?>" />
                        </div>
                    </li>
                <?php endfor; ?>

                <?php } ?>

                <?php if ($this->helper('opc')->isVatAttributeVisible()) : ?>
                    <li class="wide">
                        <label for="billing:vat_id"><?php echo $this->__('VAT Number') ?></label>
                        <div class="input-box">
                            <input type="text" id="billing:vat_id" name="billing[vat_id]" value="<?php echo $this->escapeHtml($this->getAddress()->getVatId()) ?>" title="<?php echo $this->__('VAT Number') ?>" class="input-text <?php echo $this->helper('opc')->getAttributeValidationClass('vat_id') ?>" />
                        </div>
                    </li>
                <?php endif; ?>
                    <li class="address-additional-separator"></li>
                    <li class="fields">
                        <div class="field">
                            <label for="billing:city" class="required"><em>*</em><?php echo $this->__('City') ?></label>
                            <div class="input-box">
                                <input type="text" title="<?php echo $this->__('City') ?>" name="billing[city]" value="<?php echo $this->escapeHtml($this->getAddress()->getCity()) ?>" class="input-text <?php echo $this->helper('opc')->getAttributeValidationClass('city') ?>" id="billing:city" />
                            </div>
                        </div>
                        <div class="field">
                            <label for="billing:region_id" class="required"><em>*</em><?php echo $this->__('State/Province') ?></label>
                            <div class="input-box">
                                <select id="billing:region_id" name="billing[region_id]" title="<?php echo $this->__('State / Province') ?>" class="validate-select" style="display:none;">
                                    <option value=""><?php echo $this->__('Please select region, state or province') ?></option>
                                </select>
                                <script type="text/javascript">
                                    //<![CDATA[
                                            $('billing:region_id').setAttribute('defaultValue',  "<?php echo $this->getAddress()->getRegionId() ?>");
                                    //]]>
                                </script>
                                <input type="text" id="billing:region" name="billing[region]" value="<?php echo $this->escapeHtml($this->getAddress()->getRegion()) ?>"  title="<?php echo $this->__('State / Province') ?>" class="input-text <?php echo $this->helper('opc')->getAttributeValidationClass('region') ?>" style="display:none;" />
                            </div>
                        </div>
                    </li>
                    <li class="fields">
                        <div class="field">
                            <label for="billing:country_id" class="required"><em>*</em><?php echo $this->__('Country') ?></label>
                            <div class="input-box">
                                <?php echo $this->getCountryHtmlSelect('billing') ?>
                            </div>
                        </div>
                    </li>
                    <li class="fields">
                        <div class="field">
                            <label for="billing:telephone" class="required"><em>*</em><?php echo $this->__('Telephone') ?></label>
                            <div class="input-box">
                                <input type="text" name="billing[telephone]" value="<?php echo $this->escapeHtml($this->getAddress()->getTelephone()) ?>" title="<?php echo $this->__('Telephone') ?>" class="input-text <?php echo $this->helper('opc')->getAttributeValidationClass('telephone') ?>" id="billing:telephone" />
                            </div>
                        </div>
                        <div class="field">
                            <label for="billing:fax"><?php echo $this->__('Fax') ?></label>
                            <div class="input-box">
                                <input type="text" name="billing[fax]" value="<?php echo $this->escapeHtml($this->getAddress()->getFax()) ?>" title="<?php echo $this->__('Fax') ?>" class="input-text <?php echo $this->helper('opc')->getAttributeValidationClass('fax') ?>" id="billing:fax" />
                            </div>
                        </div>
                    </li>
                <?php if ($this->isCustomerLoggedIn() && $this->customerHasAddresses()):?>
                    <div class="clear"></div>
                    <li class="control">
                        <input type="checkbox" name="billing[save_in_address_book]" value="1" title="<?php echo $this->__('Save in address book') ?>" id="billing:save_in_address_book" onchange="if(window.shipping) shipping.setSameAsBilling(false);"<?php if ($this->getAddress()->getSaveInAddressBook()):?> checked="checked"<?php endif;?> class="checkbox" /><label for="billing:save_in_address_book"><?php echo $this->__('Save in address book') ?></label>
                    </li>
                <?php else:?>
                    <li class="no-display"><input type="hidden" name="billing[save_in_address_book]" value="1" /></li>
                <?php endif; ?>
                    <?php echo $this->getChildHtml('form.additional.info'); ?>
                </ul>
            </fieldset>
        </li>
        <?php /* Extensions placeholder */ ?>
        <?php echo $this->getChildHtml('checkout.onepage.billing.extra')?>
        <!-- fix browser autocomplete -->
        <div style="display:none !important">
            <input type="text" autocomplete="off" value="" />
            <input type="password" autocomplete="off" value=""/>
        </div>
        <!-- end fix browser autocomplete -->
        <?php if(!$this->isCustomerLoggedIn()): ?>
        <?php
            $guest_allowed = $this->getQuote()->isAllowedGuestCheckout();
            if($guest_allowed): ?>
        <li class="control">
            <input type="checkbox" name="billing[create_account]" id="billing:create_account" value="1" title="<?php echo  $this->__('Create an account for later use') ?>"  class="checkbox" /><label for="billing:create_account"><?php echo  $this->__('Create an account for later use') ?></label>
        </li>
        <?php else:?>
        <input type="hidden" name="billing[create_account]" id="billing:create_account" value="1" />
        <?php endif;?>
        <li class="fields <?php if($guest_allowed):?>hidden<?php endif;?>" id="register-customer-password">
            <div class="field">
                <label for="billing:customer_password" class="required"><em>*</em><?php echo $this->__('Password') ?></label>
                <div class="input-box">
                    <input type="password" name="billing[customer_password]" title="<?php echo $this->__('Password') ?>" id="billing:customer_password" class="input-text validate-password <?php if(!$guest_allowed):?>required-entry<?php endif;?>" autocomplete="off" value=""/>
                </div>
            </div>
            <div class="field">
                <label for="billing:confirm_password" class="required"><em>*</em><?php echo $this->__('Confirm Password') ?></label>
                <div class="input-box">
                    <input type="password" name="billing[confirm_password]" title="<?php echo $this->__('Confirm Password') ?>" id="billing:confirm_password" class="input-text validate-cpassword <?php if(!$guest_allowed):?>required-entry<?php endif;?>" autocomplete="off" value=""/>
                </div>
            </div>
        </li>
        <div class="clear"></div>
        <?php endif;?>
        <?php if ($this->canShip()): ?>
        <li class="control <?php if (!Mage::helper('opc')->isShowShippingForm()):?>hidden<?php endif;?>">
            <input type="checkbox" name="billing[use_for_shipping]" id="billing:use_for_shipping_yes" value="1"<?php if ($this->isUseBillingAddressForShipping()) {?> checked="checked"<?php }?> title="<?php echo  $this->__('Ship to this address') ?>" class="checkbox   " /><label for="billing:use_for_shipping_yes"><?php echo  $this->__('Ship to this address') ?></label>
        </li>
        <?php endif; ?>
    </ul>
    <?php if (!$this->canShip()): ?>
    <input type="hidden" name="billing[use_for_shipping]" value="1" />
    <?php endif; ?>
</div>
<script type="text/javascript">
    //<![CDATA[
        var billingRegionUpdater = new RegionUpdater('billing:country_id', 'billing:region', 'billing:region_id', <?php echo $this->helper('directory')->getRegionJson() ?>, undefined, 'billing:postcode');
    //]]>
</script>

<!-- MOZG -->
<?php 
$secure = Mage::getStoreConfigFlag('web/secure/use_in_frontend');
$baseUrl = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_LINK, $secure);

$url_buscacep = $baseUrl . 'mozg_customer/index/buscacep';
$url_checkdocumento = $baseUrl . 'mozg_customer/index/checkdocumento';
?>
<?php /* ?>
<script type='text/javascript' src='http://digitalbush.com/wp-includes/js/jquery/jquery.js?ver=1.11.2'></script>
<script type='text/javascript' src='http://digitalbush.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type="text/javascript">
    jQuery.noConflict();
</script>
<?php */ ?>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.maskedinput/1.4.1/jquery.maskedinput.js" type="text/javascript"></script>
<script type="text/javascript">
    Validation.addAllThese([
    
        ['validate-unique-document', 'Verificando documento', function(v, elm) {

            var IsEmpty = Validation.get('IsEmpty').test(v);

            console.log(IsEmpty);

            var name = 'validate-unique-document';
            var useTitle = true;
            var advice = Validation.getAdvice(name, elm);

            Validation.hideAdvice(elm, advice);

            if(IsEmpty){
                var customError = 'Este Ã© um campo obrigatÃ³rio.';
                Validation.createAdvice(name, elm, useTitle, customError);

                return false;
            }

            switch(elm.id)
            {
                case 'billing:taxvat':

                var isValid = Validation.get('validate-cpf-cnpj').test(v);

                console.log(isValid);

                if( !isValid ){
                    var customError = 'O CPF ou CNPJ informado \xE9 invalido';
                    Validation.createAdvice(name, elm, useTitle, customError);

                    return false;
                }

                break;
                case 'cpf':

                var isValid = Validation.get('validate-cpf').test(v);

                console.log(isValid);

                if( !isValid ){
                    var customError = 'O CPF informado \xE9 invalido';
                    Validation.createAdvice(name, elm, useTitle, customError);

                    return false;
                }

                break;
                case 'cnpj':

                var isValid = Validation.get('validate-cnpj').test(v);

                console.log(isValid);

                if( !isValid ){
                    var customError = 'O CNPJ informado \xE9 invalido';
                    Validation.createAdvice(name, elm, useTitle, customError);

                    return false;
                }

                break;
            }

            var url = '<?php echo $url_checkdocumento; ?>';

            console.log(url);

            var req = new Ajax.Request( url, {
                method: 'get',
                asynchronous: false,
                parameters: 'elm='+encodeURIComponent(elm.id)+'&v='+encodeURIComponent(v),
                onLoading: function(transport) {
                    console.log('onLoading');

                    $('billing:loading_spinner').show();

                    pre.show('Processando...');
                    pre.hide();                  
                },
                onCreate: function(transport) {
                    console.log('onCreate');
                },
                onComplete: function(transport) {
                    console.log('onComplete');

                    $('billing:loading_spinner').hide();
                    
                    var response = transport.responseText.evalJSON();
                    var resultado = response.resultado;
                    resultado_txt = response.resultado_txt;
                    var field_id = response.field_id;

                    console.log(resultado);
                    //console.log(resultado_txt);
                    console.log(field_id);

                    if ( resultado == '0' ) {
                        isUniqueDocument = true;
                    }else{
                        isUniqueDocument = false;
                    }

                    console.log('Complete');
                        
                }
            });

            console.log(req);

            console.log(isUniqueDocument);

            if ( isUniqueDocument === false ) {
                var customError = resultado_txt;
                Validation.createAdvice(name, elm, useTitle, customError);

                return false;
            }

            return (isUniqueDocument);
        }],
    
    ]);

    <?php 

    if($isRequired_taxvat){

        $unique_document = <<<EOF

    if( $('billing:taxvat') ){
        $('billing:taxvat').addClassName('validate-unique-document');
    }

    if( $('cpf') ){
        $('cpf').addClassName('validate-unique-document');
    }
    
    if( $('cnpj') ){
        $('cnpj').addClassName('validate-unique-document');
    }


    if($('billing:taxvat')){
        function taxvat_focusEvent(event) {

            console.log(arguments.callee.name);

            var element = event.element();
        }

        function taxvat_changeEvent(event) {

            console.log(arguments.callee.name);

            var element = event.element();
        }

        function taxvat_keyupEvent(event) {

            console.log(arguments.callee.name);

            //console.log(arguments);
            //console.log(event);
            
            var element = event.element();

            //console.log(element);

            var elementValue = element.value;

            console.log(elementValue);

            var _taxvat_Mascara = taxvat_Mascara(elementValue);

            console.log(_taxvat_Mascara);

            element.value = _taxvat_Mascara;            

        }

        function taxvat_Mascara(v) {

            console.log(arguments.callee.name);

            v = v.replace(/\D/g, "");
            if (v.length <= 11) {
                v = v.replace(/(\d{3})(\d)/, "$1.$2");
                v = v.replace(/(\d{3})(\d)/, "$1.$2");
                v = v.replace(/(\d{3})(\d{1,2})$/, "$1-$2");

                $$('label[for="billing:taxvat"]').first().update('<em>*</em>CPF');

            } else {
                v = v.replace(/^(\d{2})(\d)/, "$1.$2");
                v = v.replace(/^(\d{2})\.(\d{3})(\d)/, "$1.$2.$3");
                v = v.replace(/\.(\d{3})(\d)/, ".$1/$2");
                v = v.replace(/(\d{4})(\d)/, "$1-$2");

                $$('label[for="billing:taxvat"]').first().update('<em>*</em>CNPJ');
            }
            return v;
        }

        $('billing:taxvat').addClassName("validate-cpf-cnpj");

        $('billing:taxvat').observe('focus', taxvat_focusEvent);

        $('billing:taxvat').observe('change', taxvat_changeEvent);

        $('billing:taxvat').observe('keyup', taxvat_keyupEvent);
    }
   
    if($('cpf')){
        function cpf_focusEvent(event) {

            console.log(arguments.callee.name);

            var element = event.element();
        }

        jQuery('input[name*="cpf"]').mask('999.999.999-99');

        $('cpf').addClassName("validate-cpf");
        
        $('cpf').observe('focus', cpf_focusEvent);
    }
    
    if($('cnpj')){
        function cnpj_focusEvent(event) {

            console.log(arguments.callee.name);

            var element = event.element();
        }

        jQuery('input[name*="cnpj"]').mask('99.999.999/9999-99');

        $('cnpj').addClassName("validate-cnpj");

        $('cnpj').observe('focus', cnpj_focusEvent);
    }
    
EOF;

    echo $unique_document;

    }

    ?>
    
</script>
<script type="text/javascript">
    jQuery(function($){

        // http://pedroelsner.com/2012/07/mascara-jquery-para-novo-digito-de-celular-em-sao-paulo/

        // jQuery Masked Input
        if( $('billing:telephone') ){
            console.log('mozg_billing_telephone');
            jQuery('input[name*="telephone"]').focusout(function(){
                var phone, element;
                console.log('mozg_billing_telephone_focusout');
                element = $(this);
                element.unmask();
                phone = element.val().replace(/\D/g, '');
                if(phone.length > 10) {
                        element.mask("(99) 99999-999?9");
                } else {
                        element.mask("(99) 9999-9999?9");
                }
            }).trigger('focusout');
        }

        if( $('fax') ){
            jQuery('input[name*="fax"]').focusout(function(){
                var phone, element;
                element = $(this);
                element.unmask();
                phone = element.val().replace(/\D/g, '');
                if(phone.length > 10) {
                        element.mask("(99) 99999-999?9");
                } else {
                        element.mask("(99) 9999-9999?9");
                }
            }).trigger('focusout');
        }
    
    });
    
    if( $('billing:postcode') ){
        function zip_focusEvent(event) {
            var element = event.element();
            $('billing:postcode').removeClassName("validate-zip-international");
            $('billing:postcode').addClassName("validate-zip-brasil");
        }

        jQuery('input[name*="postcode"]').mask('99999-999');

        $('billing:postcode').observe('focus', zip_focusEvent);

        Event.observe('billing:postcode', 'blur', function(event){ 
            billing_buscar_cep('<?php echo $url_buscacep; ?>');
        });
    }

    <?php if(Mage::getStoreConfig('customer/mozg_customer/address_storage_format') == 1){ ?>
    
    if( $('billing:street1') ){
        $('billing:street1').addClassName("validate-street-address");
    }

    <?php } ?>
    
    function billing_buscar_cep(url) {

        console.log(arguments.callee.name);
    
        var CEP = $('billing:postcode').value;

        if( CEP == ''){
            return false
        }

        var url = url;

        console.log(url);

        new Ajax.Request( url, {
            method: 'get',
            parameters: 'cep='+CEP,
            onLoading: function(transport) {
                console.log('onLoading');

                $('billing:loading_spinner').show();

                pre.show('Processando...');
                pre.hide();              
            },
            onCreate: function(transport) {
                console.log('onCreate');
            },
            onComplete: function(transport) {
                console.log('onComplete');

                $('billing:loading_spinner').hide();
                
                response = transport.responseText.evalJSON();

                if(response.logradouro){
                    endereco = response.logradouro;
                }

                if(response.endereco){
                    endereco = response.endereco;
                }

                <?php if(Mage::getStoreConfig('customer/mozg_customer/address_storage_format') == 1){ ?>

                    if ($('billing_rua')) {
                        $('billing_rua').value = endereco;
                    }

                    if ($('billing:street2')) {
                        $('billing:street2').value = response.bairro;
                    }

                <?php }else{ ?>

                    if ($('billing:street1')) {
                        $('billing:street1').value = endereco;
                    }

                    if ($('billing:street4')) {
                        $('billing:street4').value = response.bairro;
                    }

                <?php } ?>

                if ($('billing:city')){
                    $('billing:city').value = response.cidade;
                }

                if ($('billing:region')){
                    $('billing:region').value = response.uf;
                }

                if ($('billing:region_id')){
                    selectEstado($('billing:region_id'), response.uf );
                }

                setSelected($('billing:country'), 'BR' );
                $('billing:country').triggerEvent('change');

                console.log('Complete');

            }
        });
    
    }
     
</script>
<script type="text/javascript">
    //
    
    function randomnumber() {
        var randomnumber = Math.floor((Math.random()*9)+1);
        //console.log(randomnumber);

        return randomnumber;
    }
    
    //
    
    if($('billing:city')){
        $('billing:city').observe('dblclick', billing_easter_egg);
    }
    
    function billing_easter_egg(event) {

        console.log(arguments.callee.name);

        var element = event.element();

        if(!event.shiftKey){
                return false;
        }

        // https://www.npmjs.com/package/random-fullname

        var randomFullName = require('random-fullname');

        var random_fullname = randomFullName();

        console.log(random_fullname);

        // https://www.npmjs.com/package/random-firstname

        var randomFirstName = require('random-firstname');

        var random_firstname = randomFirstName();

        console.log(random_firstname);

        // https://www.npmjs.com/package/random-lastname

        var randomLastName = require('random-lastname');

        var random_lastname = randomFirstName();

        console.log(random_lastname);

        // https://github.com/mock-end/random-natural

        var randomNatural = require('random-natural');

        var random_number = randomNatural({ min: 1, max: 2 });

        console.log(random_number);

        // https://www.npmjs.com/package/random-month

        var randomMonth = require('random-month');

        var random_month = randomMonth();

        console.log(random_month);

        // https://www.npmjs.com/package/random-year

        var randomYear = require('random-year');

        var random_year = randomYear({ min: 1964, max: 1998 });

        console.log(random_year);

        // https://www.npmjs.com/package/cpf_cnpj

        const libCpfCnpj = require("cpf_cnpj");
        var CPF = libCpfCnpj.CPF;
        var CNPJ = libCpfCnpj.CNPJ;

        var generate_cpf = CPF.generate(true);

        var generate_cnpj = CNPJ.generate(true);

        var _cpf = generate_cpf;
        var _cnpj = generate_cnpj;

        // https://www.npmjs.com/package/random-item

        var randomItem = require('random-item');

        var random_cep = randomItem(['08215-430', '08250-580', '08210-510', '08210-000', '08290-630', '08210-570', '08215-630', '08270-001', '08220-831', '08215-070', '08210-610', '08210-050', '08210-120', '08295-380', '08295-480', '08295-410', '08275-001', '08215-290', '08215-540', '08215-000', '08295-420']);

        console.log(random_cep);

        //

        $('billing:firstname').value = random_firstname;
        $('billing:lastname').value = random_lastname;

        if( $('billing:gender') ){
            $('billing:gender').options[random_number].selected = "selected";
        }

        if ($('billing:email')){
            var _random_firstname = random_firstname.toLowerCase();
            var _random_lastname = random_lastname.toLowerCase();
            $('billing:email').value = _random_firstname + '.' + _random_lastname + '@gmail.com';
            //$('billing:email').value = cleanString(_cpf) + '@' + cleanString(_cpf) + '.com.br';
        }

        if( $('billing:company') ){
            $('billing:company').value = 'ACME Corporation S.A.';
        }

        if( $('billing:day') ){
            $('billing:day').value = '25';
            $('billing:month').value = random_month;
            $('billing:year').value = random_year;
        }

        if( $('billing:gender') ){
            $('billing:gender').options[1].selected = "selected";
        }

        if( $('billing:taxvat') ){
            $('billing:taxvat').value = _cpf;
        }

        if( $('cpf') ){
            $('cpf').value = _cpf;
        }

        if( $('rg') ){
            $('rg').value = _cpf;
        }

        if( $('cnpj') ){
            $('cnpj').value = _cnpj;
        }

        $('billing:customer_password').value = '123456';
        $('billing:confirm_password').value = '123456';

        $('billing:postcode').value = random_cep;

        if( $('billing_rua') ){
            $('billing_rua').value = 'rua';
        }
        if( $('billing_numero') ){
            $('billing_numero').value = '1';        
        }
        if( $('billing_complemento') ){
            $('billing_complemento').value = 'ap. 23 A';        
        }

        $('billing:telephone').value = '(11) ' + '2' + randomnumber() + randomnumber() + randomnumber() + '-' + randomnumber() + randomnumber() + randomnumber() + randomnumber();

        if( $('billing:fax') ){
            $('billing:fax').value = '(11) ' + '2' + randomnumber() + randomnumber() + randomnumber() + '-' + randomnumber() + randomnumber() + randomnumber() + randomnumber();
        }

        if( $('billing:company') ){
                $('billing:company').triggerEvent('keypress');
        }

        $('billing:postcode').triggerEvent('blur');
    }
    
</script>
<!-- MOZG -->